-- Removing existing Foreign Keys, if necessary
IF OBJECT_ID('[FK_MD_SOURCE_DATASET_MD_SOURCE_SYSTEM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_DATASET] DROP CONSTRAINT [FK_MD_SOURCE_DATASET_MD_SOURCE_SYSTEM]

IF OBJECT_ID('[FK_MD_BUSINESS_KEY_COMPONENT_MD_SOURCE_HUB_XREF]', 'F') IS NOT NULL
ALTER TABLE [MD_BUSINESS_KEY_COMPONENT] DROP CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_MD_SOURCE_HUB_XREF]

IF OBJECT_ID('[FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_ATTRIBUTE]', 'F') IS NOT NULL
ALTER TABLE [MD_BUSINESS_KEY_COMPONENT_PART] DROP CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_ATTRIBUTE]

IF OBJECT_ID('[FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_BUSINESS_KEY_COMPONENT]', 'F') IS NOT NULL
ALTER TABLE [MD_BUSINESS_KEY_COMPONENT_PART] DROP CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_BUSINESS_KEY_COMPONENT]

IF OBJECT_ID('[FK_MD_DRIVING_KEY_XREF_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_DRIVING_KEY_XREF] DROP CONSTRAINT [FK_MD_DRIVING_KEY_XREF_MD_HUB]

IF OBJECT_ID('[FK_MD_DRIVING_KEY_XREF_MD_SATELLITE]', 'F') IS NOT NULL
ALTER TABLE [MD_DRIVING_KEY_XREF] DROP CONSTRAINT [FK_MD_DRIVING_KEY_XREF_MD_SATELLITE]

IF OBJECT_ID('[FK_MD_HUB_LINK_XREF_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_HUB_LINK_XREF] DROP CONSTRAINT [FK_MD_HUB_LINK_XREF_MD_HUB]

IF OBJECT_ID('[FK_MD_HUB_LINK_XREF_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_HUB_LINK_XREF] DROP CONSTRAINT [FK_MD_HUB_LINK_XREF_MD_LINK]

IF OBJECT_ID('[FK_MD_HUB_LINK_XREF_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_HUB_LINK_XREF] DROP CONSTRAINT [FK_MD_HUB_LINK_XREF_MD_LINK]

IF OBJECT_ID('[FK_MD_SATELLITE_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_SATELLITE] DROP CONSTRAINT [FK_MD_SATELLITE_MD_HUB]

IF OBJECT_ID('[FK_MD_SATELLITE_MD_LINK]', 'F') IS NOT NULL
ALTER TABLE [MD_SATELLITE] DROP CONSTRAINT [FK_MD_SATELLITE_MD_LINK]

IF OBJECT_ID('[FK_MD_SOURCE_HUB_XREF_MD_HUB]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_HUB_XREF] DROP CONSTRAINT [FK_MD_SOURCE_HUB_XREF_MD_HUB]

IF OBJECT_ID('[FK_MD_SOURCE_HUB_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_HUB_XREF] DROP CONSTRAINT [FK_MD_SOURCE_HUB_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]

IF OBJECT_ID('[FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]

IF OBJECT_ID('[FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_LINK]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_LINK]

IF OBJECT_ID('[FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]

IF OBJECT_ID('[FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]

IF OBJECT_ID('[FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_PERSISTENT_STAGING]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_PERSISTENT_STAGING]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_STAGING]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_STAGING]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_LINK]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_LINK]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTERIBUTE_TO]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTERIBUTE_TO]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SATELLITE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SATELLITE]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_XREF_MD_SATELLITE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_XREF_MD_SATELLITE]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_XREF_MD_SOURCE]

IF OBJECT_ID('[FK_MD_SOURCE_SATELLITE_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_SATELLITE_XREF] DROP CONSTRAINT [FK_MD_SOURCE_SATELLITE_XREF_MD_SOURCE]

IF OBJECT_ID ('[FK_MD_SOURCE_LINK_XREF_MD_LINK]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_XREF_MD_LINK]

IF OBJECT_ID ('[FK_MD_SOURCE_LINK_XREF_MD_SOURCE]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_LINK_XREF] DROP CONSTRAINT [FK_MD_SOURCE_LINK_XREF_MD_SOURCE]

IF OBJECT_ID ('[FK_MD_SOURCE_DATASET_MD_SOURCE_SYSTEM]', 'F') IS NOT NULL
ALTER TABLE [MD_SOURCE_DATASET] DROP CONSTRAINT [FK_MD_SOURCE_DATASET_MD_SOURCE_SYSTEM]

--Model metadata
IF OBJECT_ID('[MD_MODEL_METADATA]', 'U') IS NOT NULL
 DROP TABLE [MD_MODEL_METADATA]

CREATE TABLE [MD_MODEL_METADATA]
(
    [VERSION_NAME]       varchar(100)  NOT NULL ,
    [ACTIVATION_DATETIME]     datetime2(7) NOT NULL,
    CONSTRAINT[PK_MD_MODEL_METADATA] PRIMARY KEY CLUSTERED ( [VERSION_NAME] ASC )
)

--Repository version
IF OBJECT_ID('[MD_REPOSITORY_VERSION]', 'U') IS NOT NULL
 DROP TABLE [MD_REPOSITORY_VERSION]

CREATE TABLE [MD_REPOSITORY_VERSION]
(
    [REPOSITORY_VERSION]       varchar(100)  NOT NULL ,
    [REPOSITORY_VERSION_NOTES]       varchar(4000)  NOT NULL ,
    [REPOSITORY_CREATION_DATETIME]     datetime2(7) NOT NULL,
    [REPOSITORY_UPDATE_DATETIME]     datetime2(7) NOT NULL,
    CONSTRAINT[PK_MD_REPOSITORY_VERSION] PRIMARY KEY CLUSTERED ( [REPOSITORY_VERSION] ASC)
)

--Repository version insert
INSERT INTO [MD_REPOSITORY_VERSION]
(
    [REPOSITORY_VERSION],
    [REPOSITORY_VERSION_NOTES],
    [REPOSITORY_CREATION_DATETIME],
    [REPOSITORY_UPDATE_DATETIME]
)
VALUES
(
'1.7',
'Changed STG to SOURCE and removed the TABLE part in attribute names.',
SYSDATETIME(),
SYSDATETIME()
)

--Attribute
IF OBJECT_ID('[MD_ATTRIBUTE]', 'U') IS NOT NULL
 DROP TABLE [MD_ATTRIBUTE]

CREATE TABLE [MD_ATTRIBUTE]
(
    [ATTRIBUTE_NAME]     varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
    CONSTRAINT [PK_MD_ATTRIBUTE] PRIMARY KEY CLUSTERED ( [ATTRIBUTE_NAME] ASC)
)

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_ATTRIBUTE] ON [MD_ATTRIBUTE]
( 
    [ATTRIBUTE_NAME] ASC
)


-- Business Key Component
IF OBJECT_ID('[MD_BUSINESS_KEY_COMPONENT]', 'U') IS NOT NULL
 DROP TABLE [MD_BUSINESS_KEY_COMPONENT]

CREATE TABLE [MD_BUSINESS_KEY_COMPONENT]
( 
  [SOURCE_NAME]               varchar(100) NOT NULL,
	[HUB_NAME]                  varchar(100) NOT NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL,
	[COMPONENT_ID]              integer NOT NULL,
	[COMPONENT_ORDER]           integer NOT NULL,
	[COMPONENT_VALUE]           varchar(100)  NOT NULL,
  [COMPONENT_TYPE]            varchar(100)  NOT NULL,
  CONSTRAINT[PK_MD_BUSINESS_KEY_COMPONENT] PRIMARY KEY CLUSTERED ([SOURCE_NAME] ASC, [HUB_NAME] ASC, [BUSINESS_KEY_DEFINITION] ASC, [COMPONENT_ID] ASC)
)

-- Business Key Component Part
IF OBJECT_ID('[MD_BUSINESS_KEY_COMPONENT_PART]', 'U') IS NOT NULL
 DROP TABLE [MD_BUSINESS_KEY_COMPONENT_PART]

CREATE TABLE [MD_BUSINESS_KEY_COMPONENT_PART]
( 
  [SOURCE_NAME]               varchar(100) NOT NULL,
	[HUB_NAME]                  varchar(100) NOT NULL,
	[COMPONENT_ID]              integer NOT NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL, 
	[COMPONENT_ELEMENT_ID]      integer NOT NULL,
	[COMPONENT_ELEMENT_ORDER]   integer NULL,
    [COMPONENT_ELEMENT_VALUE]   varchar(1000)  NULL,
	[COMPONENT_ELEMENT_TYPE]    varchar(100)  NOT NULL,
  [ATTRIBUTE_NAME]            varchar(100)  COLLATE Latin1_General_CS_AS NOT NULL,
  CONSTRAINT [PK_MD_BUSINESS_KEY_COMPONENT_PART] PRIMARY KEY CLUSTERED ([SOURCE_NAME] ASC, [HUB_NAME] ASC, [BUSINESS_KEY_DEFINITION] ASC, [COMPONENT_ID] ASC, [COMPONENT_ELEMENT_ID] ASC)
)

-- Driving Key Xref
IF OBJECT_ID ('[MD_DRIVING_KEY_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_DRIVING_KEY_XREF]

CREATE TABLE [MD_DRIVING_KEY_XREF]
( 
  [SATELLITE_NAME]  varchar(100) NOT NULL,
  [HUB_NAME]        varchar(100) NOT NULL,
  CONSTRAINT [PK_MD_DRIVING_KEY_XREF] PRIMARY KEY CLUSTERED ([SATELLITE_NAME] ASC, [HUB_NAME] ASC)
)

-- Staging
IF OBJECT_ID ('[MD_STAGING]', 'U') IS NOT NULL
 DROP TABLE [MD_STAGING]

CREATE TABLE [MD_STAGING]
( 
	[STAGING_NAME] varchar(100) NOT NULL,
	[STAGING_NAME_SHORT] varchar(100) NOT NULL,
	[SCHEMA_NAME]  varchar(100)  NULL,
	[BUSINESS_KEY] varchar(4000)  NULL,
	[SURROGATE_KEY] varchar(100)  NULL,
    CONSTRAINT [PK_MD_STAGING] PRIMARY KEY CLUSTERED ([STAGING_NAME] ASC)
)

-- Source Staging XREF
IF OBJECT_ID ('[MD_SOURCE_STAGING_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_STAGING_XREF]

CREATE TABLE [MD_SOURCE_STAGING_XREF]
( 
	[SOURCE_NAME] varchar(100) NOT NULL,
	[STAGING_NAME] varchar(100) NOT NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL,
	[FILTER_CRITERIA]           varchar(4000) NULL,
	[LOAD_VECTOR]               varchar(100) NULL,
    CONSTRAINT [PK_MD_SOURCE_STAGING_XREF] PRIMARY KEY CLUSTERED ([SOURCE_NAME],[STAGING_NAME] ASC)
)

-- Persistent Staging
IF OBJECT_ID ('[MD_PERSISTENT_STAGING]', 'U') IS NOT NULL
 DROP TABLE [MD_PERSISTENT_STAGING]

CREATE TABLE [MD_PERSISTENT_STAGING]
( 
	[PERSISTENT_STAGING_NAME] varchar(100) NOT NULL,
    [PERSISTENT_STAGING_NAME_SHORT] varchar(100) NOT NULL,
	[SCHEMA_NAME]  varchar(100)  NULL,
    [BUSINESS_KEY] varchar(4000)  NULL,
	[SURROGATE_KEY] varchar(100)  NULL,
    CONSTRAINT [PK_MD_PERSISTENT_STAGING] PRIMARY KEY CLUSTERED ([PERSISTENT_STAGING_NAME] ASC)
)

-- Source Persistent Staging XREF
IF OBJECT_ID ('[MD_SOURCE_PERSISTENT_STAGING_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_PERSISTENT_STAGING_XREF]

CREATE TABLE [MD_SOURCE_PERSISTENT_STAGING_XREF]
( 
	[SOURCE_NAME] varchar(100) NOT NULL,
	[PERSISTENT_STAGING_NAME] varchar(100) NOT NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL,
	[FILTER_CRITERIA]           varchar(4000) NULL,
	[LOAD_VECTOR]               varchar(100) NULL,
    CONSTRAINT [PK_MD_SOURCE_PERSISTENT_STAGING_XREF] PRIMARY KEY CLUSTERED ([SOURCE_NAME],[PERSISTENT_STAGING_NAME] ASC)
)

-- Source Staging Attribute XREF
IF OBJECT_ID ('[MD_SOURCE_STAGING_ATTRIBUTE_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]

CREATE TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]
( 
	[SOURCE_NAME] varchar(100) NOT NULL,
	[STAGING_NAME] varchar(100) NOT NULL,
    [ATTRIBUTE_NAME_TO]  varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
	[ATTRIBUTE_NAME_FROM]  varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
    [MAPPING_TYPE] varchar(100) NOT NULL,
    CONSTRAINT [PK_MD_SOURCE_STAGING_ATTRIBUTE_XREF] PRIMARY KEY CLUSTERED ([SOURCE_NAME],[STAGING_NAME], [ATTRIBUTE_NAME_TO] ASC)
)

-- Source Persistent Staging Attribute XREF
IF OBJECT_ID ('[MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]

CREATE TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]
( 
	[SOURCE_NAME] varchar(100) NOT NULL,
	[PERSISTENT_STAGING_NAME] varchar(100) NOT NULL,
	[ATTRIBUTE_NAME_TO]  varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
	[ATTRIBUTE_NAME_FROM]  varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
    [MAPPING_TYPE] varchar(100) NOT NULL,
    CONSTRAINT [PK_MD_SOURCE_STAGING_PERSISTENT_ATTRIBUTE_XREF] PRIMARY KEY CLUSTERED ([SOURCE_NAME],[PERSISTENT_STAGING_NAME], [ATTRIBUTE_NAME_TO] ASC)
)

-- Hub
IF OBJECT_ID('[MD_HUB]', 'U') IS NOT NULL
 DROP TABLE [MD_HUB]

CREATE TABLE [MD_HUB]
( 
	[HUB_NAME]     varchar(100)  NOT NULL,
    [HUB_NAME_SHORT]     varchar(100)  NOT NULL,
	[SCHEMA_NAME]  varchar(100)  NULL,
	[BUSINESS_KEY] varchar(4000)  NULL,
	[SURROGATE_KEY] varchar(100)  NULL,
    CONSTRAINT [PK_MD_HUB] PRIMARY KEY CLUSTERED ([HUB_NAME] ASC)
)

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_HUB] ON [MD_HUB]
( 
    [HUB_NAME] ASC
)

-- Hub Link XREF
IF OBJECT_ID('[MD_HUB_LINK_XREF]', 'U') IS NOT NULL
 DROP TABLE[MD_HUB_LINK_XREF]

CREATE TABLE [MD_HUB_LINK_XREF]
( 
  [HUB_NAME]                        varchar(100) NOT NULL,
  [LINK_NAME]                       varchar(100) NOT NULL,
  [HUB_ORDER]                       integer NOT NULL,
  [HUB_TARGET_KEY_NAME_IN_LINK]     varchar(4000) NOT NULL,
  CONSTRAINT[PK_MD_HUB_LINK_XREF] PRIMARY KEY CLUSTERED ([HUB_NAME] ASC, [LINK_NAME] ASC, [HUB_ORDER] ASC)
)

-- Link
IF OBJECT_ID('[MD_LINK]', 'U') IS NOT NULL
 DROP TABLE [MD_LINK]

CREATE TABLE [MD_LINK]
( 
  [LINK_NAME]       varchar(100)  NOT NULL,
  [LINK_NAME_SHORT]     varchar(100)  NOT NULL,
  [SCHEMA_NAME]     varchar(100)  NULL,
  [BUSINESS_KEY] varchar(4000)  NULL,
  [SURROGATE_KEY]   varchar(100)  NULL,
  CONSTRAINT [PK_MD_LINK] PRIMARY KEY CLUSTERED ([LINK_NAME] ASC)
)

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_LINK] ON [MD_LINK]
( 
  [LINK_NAME] ASC
)

-- Sat
IF OBJECT_ID('[MD_SATELLITE]', 'U') IS NOT NULL
 DROP TABLE [MD_SATELLITE]

CREATE TABLE [MD_SATELLITE]
( 
  [SATELLITE_NAME]      varchar(100)  NOT NULL,
  [SATELLITE_NAME_SHORT]     varchar(100)  NOT NULL,
  [SCHEMA_NAME]         varchar(100)  NULL,
  [SATELLITE_TYPE]      varchar(100)  NOT NULL,
  [HUB_NAME]            varchar(100)  NULL,
  [LINK_NAME]           varchar(100)  NULL,
  CONSTRAINT [PK_MD_SATELLITE] PRIMARY KEY CLUSTERED ([SATELLITE_NAME] ASC)
)

-- Source dataset
IF OBJECT_ID('[MD_SOURCE_DATASET]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_DATASET]

CREATE TABLE [MD_SOURCE_DATASET]
( 
        [SOURCE_DATASET_ID] [int] IDENTITY(1,1) NOT NULL,
    	[SOURCE_SYSTEM_ID] [int] NULL,
        [SOURCE_DATASET_NAME] [varchar] (100) NOT NULL, 
        [SOURCE_DATASET_TYPE] [varchar] (100) NULL,
    	[SCHEMA_NAME] [varchar] (100) NULL,
    	[FILE_BASE_NAME] [varchar] (100) NULL,
    	[FILE_EXTENSION] [varchar] (100) NULL,
    	[FILE_HEADER_INCLUDED_INDICATOR] [varchar] (1) NULL,
    	[FILE_COLUMN_DELIMITER_NAME] [varchar] (100) NULL,
    	[FILE_COLUMN_DELIMITER_TYPE] [varchar] (100) NULL,
    	[FILE_ROW_DELIMITER_NAME] [varchar] (100) NULL,
    	[FILE_ROW_DELIMITER_TYPE] [varchar] (100) NULL,
    	[FILE_LAST_ROW_DELIMITER_TYPE] [varchar] (100) NULL,
    	[ARCHIVE_REQUIRED_INDICATOR] [varchar] (1) NULL,
    CONSTRAINT [PK_MD_SOURCE_DATASET] PRIMARY KEY CLUSTERED ( [SOURCE_DATASET_ID] ASC)
)

-- Source system
IF OBJECT_ID('[MD_SOURCE_SYSTEM]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_SYSTEM]

CREATE TABLE [MD_SOURCE_SYSTEM]
( 
  [SOURCE_SYSTEM_ID] [int] NOT NULL,
  [SOURCE_SYSTEM_NAME] [varchar] (100) NOT NULL,
  [SOURCE_SYSTEM_NAME_SHORT] [varchar] (100) NULL,
  [SOURCE_SYSTEM_DESCRIPTION] [varchar] (4000) NULL,
  [DEFAULT_FILE_EXTENSION] [varchar] (100) NULL,
  [DEFAULT_FILE_HEADER_INCLUDED_INDICATOR] [varchar] (1) NULL,
  [DEFAULT_FILE_COLUMN_DELIMITER_NAME] [varchar] (100) NULL,
  [DEFAULT_FILE_COLUMN_DELIMITER_TYPE] [varchar] (100) NULL,
  [DEFAULT_FILE_ROW_DELIMITER_NAME] [varchar] (100) NULL,
  [DEFAULT_FILE_ROW_DELIMITER_TYPE] [varchar] (100) NULL,
  [DEFAULT_FILE_LAST_ROW_DELIMITER_TYPE] [varchar] (100) NULL,
  [DEFAULT_ARCHIVE_REQUIRED_INDICATOR] [varchar] (1) NULL
  CONSTRAINT [PK_MD_SOURCE_SYSTEM] PRIMARY KEY CLUSTERED ( [SOURCE_SYSTEM_ID] ASC)
)

-- Staging
IF OBJECT_ID ('[MD_SOURCE]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE]

CREATE TABLE [MD_SOURCE]
( 
  [SOURCE_NAME] varchar(100) NOT NULL,
  [SOURCE_NAME_SHORT] varchar(100) NOT NULL,
  [SCHEMA_NAME] varchar(100) NULL,
  [BUSINESS_KEY] varchar(4000)  NULL,
  [SURROGATE_KEY]   varchar(100)  NULL,
  CONSTRAINT [PK_MD_SOURCE] PRIMARY KEY CLUSTERED ([SOURCE_NAME] ASC)
)

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_SOURCE] ON [MD_SOURCE]
( 
  [SOURCE_NAME]   ASC
)

-- Staging Hub XREF
IF OBJECT_ID('[MD_SOURCE_HUB_XREF]', 'U') IS NOT NULL
 DROP TABLE[MD_SOURCE_HUB_XREF]

CREATE TABLE [MD_SOURCE_HUB_XREF]
( 
    [SOURCE_NAME]               varchar(100) NOT NULL,
	[HUB_NAME]                  varchar(100) NOT NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL,
	[FILTER_CRITERIA]           varchar(4000) NULL,
	[LOAD_VECTOR]               varchar(100) NULL,
  CONSTRAINT[PK_MD_SOURCE_HUB_XREF] PRIMARY KEY CLUSTERED([SOURCE_NAME] ASC, [HUB_NAME] ASC, [BUSINESS_KEY_DEFINITION] ASC)
)

-- Staging Link Attribute XREF
IF OBJECT_ID('[MD_SOURCE_LINK_ATTRIBUTE_XREF]', 'U') IS NOT NULL
 DROP TABLE[MD_SOURCE_LINK_ATTRIBUTE_XREF]

CREATE TABLE[MD_SOURCE_LINK_ATTRIBUTE_XREF]
( 
    [SOURCE_NAME]           varchar(100) NOT NULL,
	[LINK_NAME]             varchar(100) NOT NULL,
	[ATTRIBUTE_NAME_TO]     varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
	[ATTRIBUTE_NAME_FROM]   varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
    [MAPPING_TYPE]          varchar(100) NOT NULL,
  CONSTRAINT[PK_MD_SOURCE_LINK_ATTRIBUTE_XREF] PRIMARY KEY CLUSTERED([SOURCE_NAME] ASC, [LINK_NAME] ASC, [ATTRIBUTE_NAME_TO] ASC)
)

-- Staging Link  XREF
IF OBJECT_ID('[MD_SOURCE_LINK_XREF]', 'U') IS NOT NULL
 DROP TABLE[MD_SOURCE_LINK_XREF]

CREATE TABLE[MD_SOURCE_LINK_XREF]
( 
  [SOURCE_NAME]               varchar(100) NOT NULL,
	[LINK_NAME]                 varchar(100) NOT NULL,
	[FILTER_CRITERIA]           varchar(4000) NULL,
	[BUSINESS_KEY_DEFINITION]   varchar(4000) NOT NULL,
	[LOAD_VECTOR] varchar(100)  NULL,
  CONSTRAINT[PK_MD_SOURCE_LINK_XREF] PRIMARY KEY CLUSTERED([SOURCE_NAME] ASC, [LINK_NAME] ASC)
)

-- Staging Attribute XREF
IF OBJECT_ID('[MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]

CREATE TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]
( 
    [SOURCE_NAME]                    varchar(100) NOT NULL,
	[SATELLITE_NAME]                 varchar(100) NOT NULL,
	[ATTRIBUTE_NAME_TO]              varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
	[ATTRIBUTE_NAME_FROM]            varchar(100) COLLATE Latin1_General_CS_AS NOT NULL,
	[MULTI_ACTIVE_KEY_INDICATOR]     varchar(100)  NOT NULL,
    [MAPPING_TYPE]                   varchar(100) NOT NULL,
  CONSTRAINT [PK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] PRIMARY KEY CLUSTERED([SOURCE_NAME] ASC, [SATELLITE_NAME] ASC, [ATTRIBUTE_NAME_TO] ASC)
)

-- Staging Satellite XREF
IF OBJECT_ID('[MD_SOURCE_SATELLITE_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_SOURCE_SATELLITE_XREF]

CREATE TABLE [MD_SOURCE_SATELLITE_XREF]
( 
  [SOURCE_NAME]               varchar(100) NOT NULL,
  [SATELLITE_NAME]            varchar(100) NOT NULL,
  [BUSINESS_KEY_DEFINITION]   varchar(1000) NOT NULL,
  [FILTER_CRITERIA]           varchar(4000) NULL,
  [LOAD_VECTOR]               varchar(100)  NULL,
  CONSTRAINT [PK_MD_SOURCE_SATELLITE_XREF] PRIMARY KEY CLUSTERED([SOURCE_NAME] ASC, [SATELLITE_NAME] ASC)
)

-- Version Attribute
IF OBJECT_ID('[MD_PHYSICAL_MODEL]', 'U') IS NOT NULL
 DROP TABLE [MD_PHYSICAL_MODEL]

CREATE TABLE [MD_PHYSICAL_MODEL]
( 
  [DATABASE_NAME]               varchar(100)  NOT NULL ,
  [SCHEMA_NAME]                 varchar(100)  NOT NULL ,
  [TABLE_NAME]                  varchar(100)  NOT NULL ,
  [COLUMN_NAME]                 varchar(100)  NOT NULL,
  [DATA_TYPE]                   varchar(100)  NULL ,
  [CHARACTER_MAXIMUM_LENGTH]    integer NULL,
  [NUMERIC_PRECISION]           integer NULL,
  [NUMERIC_SCALE]               integer NULL,
  [ORDINAL_POSITION]            integer NULL,
  [PRIMARY_KEY_INDICATOR]       varchar(1)  NULL
)

ALTER TABLE[MD_PHYSICAL_MODEL]
  ADD CONSTRAINT [PK_MD_PHYSICAL_MODEL] PRIMARY KEY CLUSTERED ([DATABASE_NAME] ASC, [SCHEMA_NAME] ASC, [TABLE_NAME] ASC, [COLUMN_NAME] ASC)

ALTER TABLE [MD_SOURCE_DATASET] WITH CHECK ADD CONSTRAINT [FK_MD_SOURCE_DATASET_MD_SOURCE_SYSTEM] FOREIGN KEY ([SOURCE_SYSTEM_ID])
REFERENCES [MD_SOURCE_SYSTEM] ([SOURCE_SYSTEM_ID])

ALTER TABLE [MD_BUSINESS_KEY_COMPONENT] WITH CHECK ADD CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_MD_SOURCE_HUB_XREF] FOREIGN KEY ([SOURCE_NAME], [HUB_NAME], [BUSINESS_KEY_DEFINITION])
REFERENCES [MD_SOURCE_HUB_XREF] ([SOURCE_NAME], [HUB_NAME], [BUSINESS_KEY_DEFINITION])

ALTER TABLE [MD_BUSINESS_KEY_COMPONENT_PART] WITH CHECK ADD CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_ATTRIBUTE] FOREIGN KEY([ATTRIBUTE_NAME])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_BUSINESS_KEY_COMPONENT_PART] WITH CHECK ADD CONSTRAINT [FK_MD_BUSINESS_KEY_COMPONENT_PART_MD_BUSINESS_KEY_COMPONENT] FOREIGN KEY ([SOURCE_NAME], [HUB_NAME], [BUSINESS_KEY_DEFINITION], [COMPONENT_ID])
REFERENCES  [MD_BUSINESS_KEY_COMPONENT] ([SOURCE_NAME], [HUB_NAME], [BUSINESS_KEY_DEFINITION], [COMPONENT_ID])

ALTER TABLE [MD_DRIVING_KEY_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_DRIVING_KEY_XREF_MD_HUB] FOREIGN KEY([HUB_NAME])
REFERENCES  [MD_HUB] ([HUB_NAME])

ALTER TABLE [MD_DRIVING_KEY_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_DRIVING_KEY_XREF_MD_SATELLITE] FOREIGN KEY([SATELLITE_NAME])
REFERENCES  [MD_SATELLITE] ([SATELLITE_NAME])

ALTER TABLE [MD_HUB_LINK_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_HUB_LINK_XREF_MD_HUB] FOREIGN KEY([HUB_NAME])
REFERENCES  [MD_HUB] ([HUB_NAME])

ALTER TABLE [MD_HUB_LINK_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_HUB_LINK_XREF_MD_LINK] FOREIGN KEY([LINK_NAME])
REFERENCES  [MD_LINK] ([LINK_NAME])

ALTER TABLE [MD_SATELLITE]  WITH CHECK ADD  CONSTRAINT [FK_MD_SATELLITE_MD_HUB] FOREIGN KEY([HUB_NAME])
REFERENCES  [MD_HUB] ([HUB_NAME])

ALTER TABLE [MD_SATELLITE]  WITH CHECK ADD  CONSTRAINT [FK_MD_SATELLITE_MD_LINK] FOREIGN KEY([LINK_NAME])
REFERENCES  [MD_LINK] ([LINK_NAME])

ALTER TABLE [MD_SOURCE_HUB_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_HUB_XREF_MD_HUB] FOREIGN KEY ([HUB_NAME])
REFERENCES  [MD_HUB] ([HUB_NAME])

ALTER TABLE [MD_SOURCE_HUB_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_HUB_XREF_MD_SOURCE] FOREIGN KEY ([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM] FOREIGN KEY([ATTRIBUTE_NAME_FROM])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO] FOREIGN KEY([ATTRIBUTE_NAME_TO])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_LINK] FOREIGN KEY([LINK_NAME])
REFERENCES  [MD_LINK] ([LINK_NAME])

ALTER TABLE [MD_SOURCE_LINK_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_ATTRIBUTE_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM] FOREIGN KEY([ATTRIBUTE_NAME_FROM])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO] FOREIGN KEY([ATTRIBUTE_NAME_TO])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_PERSISTENT_STAGING] FOREIGN KEY([PERSISTENT_STAGING_NAME])
REFERENCES  [MD_PERSISTENT_STAGING] ([PERSISTENT_STAGING_NAME])

ALTER TABLE [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM] FOREIGN KEY([ATTRIBUTE_NAME_FROM])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_ATTRIBUTE_TO] FOREIGN KEY([ATTRIBUTE_NAME_TO])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_STAGING] FOREIGN KEY([STAGING_NAME])
REFERENCES  [MD_STAGING] ([STAGING_NAME])

ALTER TABLE [MD_SOURCE_STAGING_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_STAGING_ATTRIBUTE_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_LINK_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_XREF_MD_LINK] FOREIGN KEY([LINK_NAME])
REFERENCES  [MD_LINK] ([LINK_NAME])

ALTER TABLE [MD_SOURCE_LINK_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_LINK_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTE_FROM] FOREIGN KEY([ATTRIBUTE_NAME_FROM])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_ATTRIBUTERIBUTE_TO] FOREIGN KEY([ATTRIBUTE_NAME_TO])
REFERENCES  [MD_ATTRIBUTE] ([ATTRIBUTE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SATELLITE] FOREIGN KEY([SATELLITE_NAME])
REFERENCES  [MD_SATELLITE] ([SATELLITE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_ATTRIBUTE_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_XREF_MD_SATELLITE] FOREIGN KEY([SATELLITE_NAME])
REFERENCES  [MD_SATELLITE] ([SATELLITE_NAME])

ALTER TABLE [MD_SOURCE_SATELLITE_XREF]  WITH CHECK ADD  CONSTRAINT [FK_MD_SOURCE_SATELLITE_XREF_MD_SOURCE] FOREIGN KEY([SOURCE_NAME])
REFERENCES  [MD_SOURCE] ([SOURCE_NAME])

-- INTERFACE_SUBJECT_AREA
IF OBJECT_ID('[interface].[INTERFACE_SUBJECT_AREA]', 'V') IS NOT NULL
 DROP VIEW [interface].INTERFACE_SUBJECT_AREA

-- INTERFACE_BUSINESS_KEY_COMPONENT
IF OBJECT_ID('[interface].[INTERFACE_BUSINESS_KEY_COMPONENT]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_BUSINESS_KEY_COMPONENT]

-- INTERFACE_BUSINESS_KEY_COMPONENT_PART
IF OBJECT_ID('[interface].[INTERFACE_BUSINESS_KEY_COMPONENT_PART]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_BUSINESS_KEY_COMPONENT_PART]

-- INTERFACE_SOURCE_SATELLITE_ATTRIBUTE_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_SATELLITE_ATTRIBUTE_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_SATELLITE_ATTRIBUTE_XREF]

-- INTERFACE_SOURCE_LINK_ATTRIBUTE_XREF
--IF OBJECT_ID('[interface].[INTERFACE_SOURCE_LINK_ATTRIBUTE_XREF]', 'V') IS NOT NULL
-- DROP VIEW [interface].[INTERFACE_SOURCE_LINK_ATTRIBUTE_XREF]

-- INTERFACE_HUB_LINK_XREF
IF OBJECT_ID('[interface].[INTERFACE_HUB_LINK_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_HUB_LINK_XREF]

-- INTERFACE_DRIVING_KEY
IF OBJECT_ID('[interface].[INTERFACE_DRIVING_KEY]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_DRIVING_KEY]

-- INTERFACE_SOURCE_STAGING_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_STAGING_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_STAGING_XREF]

-- INTERFACE_SOURCE_STAGING_ATTRIBUTE_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_STAGING_ATTRIBUTE_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_STAGING_ATTRIBUTE_XREF]

-- INTERFACE_SOURCE_PERSISTENT_STAGING_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_XREF]

-- INTERFACE_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]

-- INTERFACE_SOURCE_SATELLITE_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_SATELLITE_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_SATELLITE_XREF]

-- INTERFACE_SOURCE_HUB_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_HUB_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_HUB_XREF]

-- INTERFACE_SOURCE_LINK_XREF
IF OBJECT_ID('[interface].[INTERFACE_SOURCE_LINK_XREF]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_SOURCE_LINK_XREF]

-- INTERFACE_PHYSICAL_MODEL
IF OBJECT_ID('[interface].[INTERFACE_PHYSICAL_MODEL]', 'V') IS NOT NULL
 DROP VIEW [interface].[INTERFACE_PHYSICAL_MODEL]

-- Creating the [interface] schema
IF EXISTS ( SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'interface')
DROP SCHEMA [interface]
--GO

-- Create the Interface schema
CREATE SCHEMA [interface]
--GO

-- Create the Business Key Component view
CREATE VIEW [interface].[INTERFACE_BUSINESS_KEY_COMPONENT]
AS
SELECT
 src.[SCHEMA_NAME] AS SOURCE_SCHEMA_NAME,
 src.SOURCE_NAME_SHORT AS SOURCE_NAME,
 hub.[SCHEMA_NAME] AS TARGET_SCHEMA_NAME,
 hub.HUB_NAME_SHORT AS TARGET_NAME,
 BUSINESS_KEY_DEFINITION,
 COMPONENT_ID AS BUSINESS_KEY_COMPONENT_ID,
 COMPONENT_ORDER AS BUSINESS_KEY_COMPONENT_ORDER,
 COMPONENT_VALUE AS BUSINESS_KEY_COMPONENT_VALUE
FROM MD_BUSINESS_KEY_COMPONENT xref
JOIN MD_SOURCE src ON xref.SOURCE_NAME = src.SOURCE_NAME
JOIN MD_HUB hub ON xref.HUB_NAME = hub.HUB_NAME
--GO

CREATE VIEW [interface].[INTERFACE_BUSINESS_KEY_COMPONENT_PART]
AS
SELECT
  stg.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME],
  stg.[SOURCE_NAME_SHORT] AS SOURCE_NAME,
  hub.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
  hub.[HUB_NAME_SHORT] AS [TARGET_NAME],
  comp.[BUSINESS_KEY_DEFINITION],
  comp.[COMPONENT_ID] AS [BUSINESS_KEY_COMPONENT_ID], 
  comp.[COMPONENT_ORDER] AS [BUSINESS_KEY_COMPONENT_ORDER],
  elem.[COMPONENT_ELEMENT_ID] AS [BUSINESS_KEY_COMPONENT_ELEMENT_ID], 
  elem.[COMPONENT_ELEMENT_ORDER] AS [BUSINESS_KEY_COMPONENT_ELEMENT_ORDER],
  elem.[COMPONENT_ELEMENT_VALUE] AS [BUSINESS_KEY_COMPONENT_ELEMENT_VALUE],
  elem.[COMPONENT_ELEMENT_TYPE] AS [BUSINESS_KEY_COMPONENT_ELEMENT_TYPE],
  COALESCE(elem.[ATTRIBUTE_NAME], 'Not applicable') AS [BUSINESS_KEY_COMPONENT_ELEMENT_ATTRIBUTE_NAME]
FROM MD_BUSINESS_KEY_COMPONENT comp
JOIN MD_BUSINESS_KEY_COMPONENT_PART elem
  ON comp.SOURCE_NAME = elem.SOURCE_NAME
 AND comp.HUB_NAME = elem.HUB_NAME
 AND comp.BUSINESS_KEY_DEFINITION = elem.BUSINESS_KEY_DEFINITION
 AND comp.COMPONENT_ID = elem.COMPONENT_ID
JOIN MD_SOURCE stg ON comp.SOURCE_NAME = stg.SOURCE_NAME
JOIN MD_HUB hub ON comp.HUB_NAME = hub.HUB_NAME
--GO

CREATE VIEW [interface].[INTERFACE_DRIVING_KEY]
AS
SELECT
  sat.SATELLITE_NAME_SHORT AS SATELLITE_NAME, 
  sat.[SCHEMA_NAME] AS [SATELLITE_SCHEMA_NAME],
  hub.HUB_NAME_SHORT AS HUB_NAME,
  hub.[SCHEMA_NAME] AS [HUB_SCHEMA_NAME]
FROM MD_DRIVING_KEY_XREF MD
JOIN MD_HUB hub ON MD.HUB_NAME=hub.HUB_NAME
JOIN MD_SATELLITE sat on MD.SATELLITE_NAME = sat.SATELLITE_NAME
--GO

CREATE VIEW [interface].[INTERFACE_HUB_LINK_XREF]
AS
SELECT
  stg.[SCHEMA_NAME] AS[SOURCE_SCHEMA_NAME],
  stg.SOURCE_NAME_SHORT AS SOURCE_NAME,
  lnk.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
  lnk.LINK_NAME_SHORT AS [TARGET_NAME],
  hub.[SCHEMA_NAME] AS[HUB_SCHEMA_NAME],
  hub.[HUB_NAME_SHORT] AS [HUB_NAME],
  hub.[SURROGATE_KEY] AS [SURROGATE_KEY],
  hlxref.[HUB_TARGET_KEY_NAME_IN_LINK] AS [TARGET_KEY_NAME],
  [BUSINESS_KEY_PART_SOURCE] AS[SOURCE_BUSINESS_KEY_DEFINITION],
  hub.[BUSINESS_KEY] AS[TARGET_BUSINESS_KEY_DEFINITION],
  hlxref.HUB_ORDER
FROM
(
  SELECT
    LINK_NAME,
    SOURCE_NAME,
    LTRIM(Split.a.value('.', 'VARCHAR(4000)')) AS BUSINESS_KEY_PART_SOURCE,
    ROW_NUMBER() OVER(PARTITION BY LINK_NAME, SOURCE_NAME ORDER BY LINK_NAME, SOURCE_NAME) AS HUB_ORDER
  FROM
  (
    SELECT
      LINK_NAME,
      SOURCE_NAME,
      CAST('<M>' + REPLACE(BUSINESS_KEY_DEFINITION, ',', '</M><M>') + '</M>' AS XML) AS BUSINESS_KEY_SOURCE_XML
    FROM [MD_SOURCE_LINK_XREF]
  ) AS A CROSS APPLY BUSINESS_KEY_SOURCE_XML.nodes('/M') AS Split(a)
) slxref
JOIN MD_SOURCE stg ON slxref.SOURCE_NAME = stg.SOURCE_NAME
JOIN MD_LINK lnk ON slxref.LINK_NAME = lnk.LINK_NAME
JOIN MD_HUB_LINK_XREF hlxref ON slxref.LINK_NAME = hlxref.LINK_NAME
AND slxref.HUB_ORDER = hlxref.HUB_ORDER
JOIN MD_HUB hub ON hlxref.HUB_NAME = hub.HUB_NAME
UNION
SELECT
  src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME]
 ,src.[SOURCE_NAME_SHORT] AS SOURCE_NAME
 ,tgt.[SCHEMA_NAME] AS [LINK_SCHEMA_NAME]
 ,tgt.[LINK_NAME_SHORT] AS [LINK_NAME]
 ,tgt.[SCHEMA_NAME] AS [HUB_SCHEMA_NAME]
 ,'N/A' AS [HUB_NAME]
 ,[ATTRIBUTE_NAME_TO] COLLATE Latin1_General_CS_AS AS [SURROGGATE_KEY]
 ,[ATTRIBUTE_NAME_TO] COLLATE Latin1_General_CS_AS AS [TARGET_KEY_NAME_IN_LINK]
 ,[ATTRIBUTE_NAME_FROM] COLLATE Latin1_General_CS_AS AS [SOURCE_BUSINESS_KEY_DEFINITION]
 ,[ATTRIBUTE_NAME_TO] COLLATE Latin1_General_CS_AS AS [HTARGET_BUSINESS_KEY_DEFINITION]
 ,99
FROM [MD_SOURCE_LINK_ATTRIBUTE_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_LINK] tgt ON xref.[LINK_NAME] = tgt.[LINK_NAME]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_STAGING_XREF]
AS
/*
This view combines the staging area listing / interfaces with the exceptions where a single source file/table is mapped to more than one Staging Area tables.
This is the default source for source-to-staging interfaces.
*/
SELECT
  src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME],
  src.[SOURCE_NAME_SHORT] AS [SOURCE_NAME],
  xref.[BUSINESS_KEY_DEFINITION] AS [SOURCE_BUSINESS_KEY_DEFINITION],
  tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
  tgt.[STAGING_NAME_SHORT] AS [TARGET_NAME],
  xref.[BUSINESS_KEY_DEFINITION] AS [TARGET_BUSINESS_KEY_DEFINITION],
  'StagingArea' AS [TARGET_TYPE],
  'Not applicable' AS [SURROGATE_KEY],
  [FILTER_CRITERIA],
  'Raw' AS [LOAD_VECTOR]
FROM[MD_SOURCE_STAGING_XREF] xref
JOIN[MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN[MD_STAGING] tgt ON xref.[STAGING_NAME] = tgt.[STAGING_NAME]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_STAGING_ATTRIBUTE_XREF]
AS
SELECT
   src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME]
  ,src.[SOURCE_NAME_SHORT] AS [SOURCE_NAME]
  ,tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME]
  ,tgt.[STAGING_NAME_SHORT] AS [TARGET_NAME]
  ,xref.[ATTRIBUTE_NAME_FROM] AS [SOURCE_ATTRIBUTE_NAME]
  ,xref.[ATTRIBUTE_NAME_TO] AS [TARGET_ATTRIBUTE_NAME]
FROM [MD_SOURCE_STAGING_ATTRIBUTE_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_STAGING] tgt ON xref.[STAGING_NAME] = tgt.[STAGING_NAME]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_XREF]
AS
SELECT
  src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME],
  src.[SOURCE_NAME_SHORT] AS [SOURCE_NAME],
  xref.[BUSINESS_KEY_DEFINITION] AS [SOURCE_BUSINESS_KEY_DEFINITION],
  tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
  tgt.[PERSISTENT_STAGING_NAME_SHORT] AS[TARGET_NAME],
  xref.[BUSINESS_KEY_DEFINITION] AS [TARGET_BUSINESS_KEY_DEFINITION],
  'PersistentStagingArea' AS [TARGET_TYPE],
  'Not applicable' AS [SURROGATE_KEY],
  [FILTER_CRITERIA],
  'Raw' AS [LOAD_VECTOR]
FROM [MD_SOURCE_PERSISTENT_STAGING_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_PERSISTENT_STAGING] tgt ON xref.[PERSISTENT_STAGING_NAME] = tgt.[PERSISTENT_STAGING_NAME]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF]
AS
SELECT
   src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME]
  ,src.[SOURCE_NAME_SHORT] AS [SOURCE_NAME]
  ,tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME]
  ,tgt.[PERSISTENT_STAGING_NAME_SHORT] AS [TARGET_NAME]
  ,xref.[ATTRIBUTE_NAME_FROM] AS [SOURCE_ATTRIBUTE_NAME]
  ,xref.[ATTRIBUTE_NAME_TO] AS [TARGET_ATTRIBUTE_NAME]
FROM [MD_SOURCE_PERSISTENT_STAGING_ATTRIBUTE_XREF] xref
JOIN [MD_SOURCE] src ON xref.SOURCE_NAME = src.SOURCE_NAME
JOIN [MD_PERSISTENT_STAGING] tgt ON xref.PERSISTENT_STAGING_NAME = tgt.PERSISTENT_STAGING_NAME
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_HUB_XREF]
AS
SELECT
  src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME]
 ,src.[SOURCE_NAME_SHORT] AS SOURCE_NAME
 ,tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME]
 ,tgt.[HUB_NAME_SHORT] AS [TARGET_NAME]
 ,xref.[BUSINESS_KEY_DEFINITION] AS [SOURCE_BUSINESS_KEY_DEFINITION]
 ,tgt.[BUSINESS_KEY] AS [TARGET_BUSINESS_KEY_DEFINITION]
 ,'Hub' AS [TARGET_TYPE]
 ,tgt.[SURROGATE_KEY]
 ,[FILTER_CRITERIA]
 ,xref.[LOAD_VECTOR]
FROM [MD_SOURCE_HUB_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_HUB] tgt ON xref.HUB_NAME = tgt.[HUB_NAME]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_LINK_XREF]
AS
SELECT
  src.[SCHEMA_NAME] AS[SOURCE_SCHEMA_NAME]
 ,src.[SOURCE_NAME_SHORT] AS SOURCE_NAME
 ,tgt.[SCHEMA_NAME] AS[TARGET_SCHEMA_NAME]
 ,tgt.[LINK_NAME_SHORT] AS[TARGET_NAME]
 ,xref.BUSINESS_KEY_DEFINITION AS [SOURCE_BUSINESS_KEY_DEFINITION]
 ,tgt.[BUSINESS_KEY] as [TARGET_BUSINESS_KEY_DEFINITION]
 ,'Link' as [TARGET_TYPE]
 ,tgt.[SURROGATE_KEY]
 ,[FILTER_CRITERIA]
 ,xref.[LOAD_VECTOR]
FROM [MD_SOURCE_LINK_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_LINK] tgt ON xref.[LINK_NAME] = tgt.[LINK_NAME]                  
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_SATELLITE_ATTRIBUTE_XREF]
AS
SELECT
  src.[SCHEMA_NAME] AS SOURCE_SCHEMA_NAME
 ,src.[SOURCE_NAME_SHORT] AS SOURCE_NAME
 ,tgt.[SCHEMA_NAME] AS TARGET_SCHEMA_NAME
 ,tgt.[SATELLITE_NAME_SHORT] AS [TARGET_NAME]
 ,[ATTRIBUTE_NAME_FROM] AS [SOURCE_ATTRIBUTE_NAME]
 ,[ATTRIBUTE_NAME_TO] AS [TARGET_ATTRIBUTE_NAME]
 ,[MULTI_ACTIVE_KEY_INDICATOR]
FROM [MD_SOURCE_SATELLITE_ATTRIBUTE_XREF] xref
JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
JOIN [MD_SATELLITE] tgt ON xref.[SATELLITE_NAME] = tgt.[SATELLITE_NAME]
--GO

--CREATE VIEW [interface].[INTERFACE_SOURCE_LINK_ATTRIBUTE_XREF]
--AS
--SELECT
--  src.[SCHEMA_NAME] AS [SOURCE_SCHEMA_NAME]
-- ,xref.[SOURCE_NAME]
-- ,tgt.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME]
-- ,xref.[LINK_NAME] AS [TARGET_NAME]
-- ,[ATTRIBUTE_NAME_FROM] AS [SOURCE_ATTRIBUTE_NAME]
-- ,[ATTRIBUTE_NAME_TO] AS [TARGET_ATTRIBUTE_NAME]
--FROM [MD_SOURCE_LINK_ATTRIBUTE_XREF] xref
--JOIN [MD_SOURCE] src ON xref.[SOURCE_NAME] = src.[SOURCE_NAME]
--JOIN [MD_LINK] tgt ON xref.[LINK_NAME] = tgt.[LINK_NAME]
----GO

CREATE VIEW [interface].[INTERFACE_PHYSICAL_MODEL]
AS
SELECT
  [DATABASE_NAME]
 ,[SCHEMA_NAME]
 ,[TABLE_NAME]
 ,[COLUMN_NAME]
 ,[DATA_TYPE]
 ,[CHARACTER_MAXIMUM_LENGTH]
 ,[NUMERIC_PRECISION]
 ,[NUMERIC_SCALE]  
 ,[ORDINAL_POSITION]
 ,[PRIMARY_KEY_INDICATOR]
FROM [MD_PHYSICAL_MODEL]
--GO

CREATE VIEW [interface].[INTERFACE_SOURCE_SATELLITE_XREF]
AS
SELECT
 stg.[SCHEMA_NAME] AS SOURCE_SCHEMA_NAME,
 stg.SOURCE_NAME_SHORT AS SOURCE_NAME,
 sat.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
 sat.SATELLITE_NAME_SHORT AS [TARGET_NAME],
 xref.BUSINESS_KEY_DEFINITION AS SOURCE_BUSINESS_KEY_DEFINITION,
 hub.[BUSINESS_KEY] AS [TARGET_BUSINESS_KEY_DEFINITION],
 sat.SATELLITE_TYPE AS [TARGET_TYPE],
 hub.SURROGATE_KEY,
 xref.FILTER_CRITERIA,
 xref.[LOAD_VECTOR]
FROM MD_SOURCE_SATELLITE_XREF xref
JOIN MD_SOURCE stg ON xref.SOURCE_NAME = stg.SOURCE_NAME
JOIN MD_SATELLITE sat ON xref.SATELLITE_NAME = sat.SATELLITE_NAME
JOIN MD_HUB hub ON sat.HUB_NAME = hub.HUB_NAME
LEFT JOIN MD_SOURCE_HUB_XREF stghubxref
  ON xref.SOURCE_NAME = stghubxref.SOURCE_NAME
  AND hub.HUB_NAME = stghubxref.HUB_NAME
  AND xref.BUSINESS_KEY_DEFINITION = stghubxref.BUSINESS_KEY_DEFINITION
WHERE sat.SATELLITE_TYPE= 'Normal'
UNION   
SELECT
 stg.[SCHEMA_NAME] AS SOURCE_SCHEMA_NAME,
 stg.SOURCE_NAME_SHORT AS SOURCE_NAME,
 sat.[SCHEMA_NAME] AS [TARGET_SCHEMA_NAME],
 sat.SATELLITE_NAME_SHORT AS [TARGET_NAME],
 xref.BUSINESS_KEY_DEFINITION AS SOURCE_BUSINESS_KEY_DEFINITION,
 lnk.BUSINESS_KEY AS [TARGET_BUSINESS_KEY_DEFINITION],
 sat.SATELLITE_TYPE AS [TARGET_TYPE],
 lnk.SURROGATE_KEY,
 xref.FILTER_CRITERIA,
 xref.[LOAD_VECTOR]
FROM MD_SOURCE_SATELLITE_XREF xref
JOIN MD_SOURCE stg ON xref.SOURCE_NAME = stg.SOURCE_NAME
JOIN MD_SATELLITE sat ON xref.SATELLITE_NAME = sat.SATELLITE_NAME
JOIN MD_HUB hub ON sat.HUB_NAME = hub.HUB_NAME
JOIN MD_LINK lnk ON sat.LINK_NAME = lnk.LINK_NAME
LEFT JOIN MD_SOURCE_HUB_XREF stghubxref
  ON xref.SOURCE_NAME = stghubxref.SOURCE_NAME
  AND hub.HUB_NAME = stghubxref.HUB_NAME
  AND xref.BUSINESS_KEY_DEFINITION = stghubxref.BUSINESS_KEY_DEFINITION
WHERE sat.SATELLITE_TYPE= 'Link Satellite'
--GO

--Create the Subject Area view
CREATE VIEW [interface].[INTERFACE_SUBJECT_AREA] AS
SELECT 
  SUBSTRING(a.TARGET_NAME,CHARINDEX('_',a.TARGET_NAME)+1,LEN(a.TARGET_NAME)) AS SUBJECT_AREA,
  a.TARGET_SCHEMA_NAME+'.'+a.TARGET_NAME AS BUSINESS_CONCEPT,
  b.TARGET_SCHEMA_NAME+'.'+b.TARGET_NAME AS CONTEXT_TABLE
FROM interface.INTERFACE_SOURCE_HUB_XREF a
JOIN interface.INTERFACE_SOURCE_SATELLITE_XREF  b
ON a.SOURCE_NAME = b.SOURCE_NAME
AND a.SOURCE_BUSINESS_KEY_DEFINITION = b.SOURCE_BUSINESS_KEY_DEFINITION
UNION
SELECT 
  SUBSTRING(a.TARGET_NAME,CHARINDEX('_',a.TARGET_NAME)+1,LEN(a.TARGET_NAME)) AS SUBJECT_AREA,
  a.TARGET_SCHEMA_NAME+'.'+a.TARGET_NAME AS BUSINESS_CONCEPT,
  b.TARGET_SCHEMA_NAME+'.'+b.TARGET_NAME AS CONTEXT_TABLE
FROM interface.INTERFACE_SOURCE_LINK_XREF a
LEFT JOIN interface.INTERFACE_SOURCE_SATELLITE_XREF  b
ON a.SOURCE_NAME = b.SOURCE_NAME
AND a.SOURCE_BUSINESS_KEY_DEFINITION = b.SOURCE_BUSINESS_KEY_DEFINITION
--GO